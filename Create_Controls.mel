global proc colorCrtls(string $Crtl, int $color)
{

    string $shapes[]; //Sets color index of the conrtol

    
    $shapes = `listRelatives -shapes $Crtl`; //find the shape node of Crtl
    //enable override on $shape
    for ($shape in $shapes)
    {
        if (`nodeType $shape` == "nurbsCurve")
        {
            setAttr ($shape + ".overrideEnabled") 1;
            setAttr ($shape + ".overrideColor") $color;
        }
        else
        {
            warning("selected object is not a curve.");
        }

    }
    //set $Crtl color to $color
}
//run script to this point to load funtion into Maya

global proc string reshape (string $Shapes)
{
   string $control[];

   if ($Shapes == "circle"){
       $control = `circle -c 0 0 0 -nr 0 1 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1`; 
        objectMoveCommand;
   }

   else if ($Shapes == "square")
   {
        /*select -r nurbsCircle1.cv[2] ;
        select -tgl nurbsCircle1.cv[0] ;
        select -tgl nurbsCircle1.cv[4] ;
        select -tgl nurbsCircle1.cv[6] ;
        scale -r -p 0cm 0cm 0cm 1.518027 1.518027 1.518027 ;*/
        $control[0] = `curve -d 1 -p -0.5 0 -0.5 -p -0.5 0 0.5 -p 0.5 0 0.5 -p 0.5 0 -0.5 -p -0.5 0 -0.5 -k 0 -k 1 -k 2 -k 3 -k 4 `;
        closeCurve -ch 1 -ps 1 -rpo 1 -bb 0.5 -bki 0 -p 0.1;


   }
   else if ($Shapes == "diamond")
   {
       $control = `circle -c 0 0 0 -nr 0 1 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1`; 
        objectMoveCommand;
        select -r nurbsCircle1.cv[2] ;
        select -tgl nurbsCircle1.cv[0] ;
        select -tgl nurbsCircle1.cv[6] ;
        select -tgl nurbsCircle1.cv[4] ;
        scale -r -p 0cm 0cm 0cm 0.165162 0.165162 0.165162 ;
   }
   else if ($Shapes == "squiggle")
   {
       $control = `circle -c 0 0 0 -nr 0 1 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1`; 
        objectMoveCommand;
        select -r nurbsCircle1.ep[1] ;
        select -tgl nurbsCircle1.ep[7] ;
        select -tgl nurbsCircle1.ep[5] ;
        select -tgl nurbsCircle1.ep[3] ;
        scale -r -p 0cm 0cm 0cm 0.00851647 0.00851647 0.00851647 ;
   }
return $control[0];

}

global proc MakeCrtls(int $index, string $nameOshape)
{
    string $SelObj[] = `ls -sl`;
    if (size($SelectedObj)>0 )
    {
        for ($selection in $SelObj)
        {
            //creates a control
            string $typecrtl = reshape($nameOshape);
            colorCrtls($typecrtl,$index);
            
            string $reCrtl = `rename $typecrtl ($selection+ "_Crtl")`; //renames control and saves it into a string so it can be called later
            
            string $groups = `group -world -name ($reCrtl+ "_Grp") $reCrtl`; //ends new group with suffix_grp
          
            matchTransform $groups $selection;
        }
    }
    else {
        string $control = reshape($nameOshape);
        string $reCrtl = `rename $control "_Crtl"`;
        string $groupies = `group -world -name ($reCrtl+ "_Grp") $reCrtl`;
        colorCrtls($reCrtl,$index);
    }
}

MakeCrtls(6,"square");
//color index 17 = yellow
//color index 13 = red
//color index 6 = blue
